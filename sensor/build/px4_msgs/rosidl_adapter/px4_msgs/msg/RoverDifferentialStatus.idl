// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/RoverDifferentialStatus.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    struct RoverDifferentialStatus {
      @verbatim (language="comment", text=
        "time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        "Measured speed in body x direction. Forwards: positiv, Backwards: negativ")
      @unit (value="m/s")
      float measured_forward_speed;

      @verbatim (language="comment", text=
        "Speed setpoint after applying slew rate")
      @unit (value="m/s")
      float adjusted_forward_speed_setpoint;

      @verbatim (language="comment", text=
        "Measured yaw")
      @unit (value="rad")
      float measured_yaw;

      @verbatim (language="comment", text=
        "Yaw setpoint after applying slew rate")
      @unit (value="rad")
      float adjusted_yaw_setpoint;

      @verbatim (language="comment", text=
        "Yaw rate setpoint output by the closed loop yaw controller")
      @unit (value="rad/s")
      float clyaw_yaw_rate_setpoint;

      @verbatim (language="comment", text=
        "Measured yaw rate")
      @unit (value="rad/s")
      float measured_yaw_rate;

      @verbatim (language="comment", text=
        "Yaw rate setpoint from the closed loop yaw controller")
      @unit (value="rad/s")
      float adjusted_yaw_rate_setpoint;

      @verbatim (language="comment", text=
        "Integral of the PID for the closed loop yaw controller")
      float pid_yaw_integral;

      @verbatim (language="comment", text=
        "Integral of the PID for the closed loop yaw rate controller")
      float pid_yaw_rate_integral;

      @verbatim (language="comment", text=
        "Integral of the PID for the closed loop speed controller")
      float pid_throttle_integral;
    };
  };
};
